@page "/"

<h3 class="text-center mt-4">Gestión de Votantes</h3>

<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-primary" @onclick="MostrarFormulario">
        <i class="fas fa-plus"></i> Agregar Votante
    </button>
</div>

@if (mostrarAlerta)
{
        <div class="alert alert-success alert-dismissible fade show" role="alert">
        @mensajeAlerta
            <button type="button" class="btn-close" @onclick="() => mostrarAlerta = false"></button>
        </div>
}

@if (votantes is null)
{
        <div class="text-center">
            <div class="spinner-border text-primary" role="status"></div>
            <p>Cargando votantes...</p>
        </div>
}
else if (!votantes.Any())
{
        <div class="alert alert-info text-center">No hay votantes registrados.</div>
}
else
{
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Cédula</th>
                    <th>Nombre</th>
                    <th>¿Ya Votó?</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var (v, index) in votantes.Select((v, i) => (v, i + 1)))
            {
                    <tr>
                        <td>@index</td>
                        <td>@v.Cedula</td>
                        <td>@v.Nombre</td>
                        <td>@(v.Ya_voto ? "Sí" : "No")</td>
                        <td>
                            <button class="btn btn-warning btn-sm me-2" @onclick="() => EditarVotante(v)">
                                <i class="fas fa-edit"></i> Editar
                            </button>
                            <button class="btn btn-danger btn-sm" @onclick="() => EliminarVotante(v.Cedula)">
                                <i class="fas fa-trash"></i> Eliminar
                            </button>
                        </td>
                    </tr>
            }
            </tbody>
        </table>
}

@if (mostrarFormulario)
{
        <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@(modoEditar ? "Editar Votante" : "Agregar Votante")</h5>
                        <button type="button" class="btn-close" @onclick="Cancelar"></button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="votanteActual" OnValidSubmit="GuardarVotante">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="mb-3">
                                <label class="form-label">Cédula:</label>
                                <InputNumber class="form-control" @bind-Value="votanteActual.Cedula" disabled="@modoEditar" required />
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Nombre:</label>
                                <InputText class="form-control" @bind-Value="votanteActual.Nombre" required />
                            </div>
                            <div class="mb-3 form-check">
                                <InputCheckbox class="form-check-input" @bind-Value="votanteActual.Ya_voto" />
                                <label class="form-check-label">¿Ya Votó?</label>
                            </div>
                            <div class="d-flex justify-content-end">
                                <button type="submit" class="btn btn-success me-2">
                                    <i class="fas fa-save"></i> Guardar
                                </button>
                                <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                                    <i class="fas fa-times"></i> Cancelar
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
}

@code {
    private List<Votante> votantes = new();
    private Votante votanteActual = new();
    private bool mostrarFormulario = false;
    private string? mensajeAlerta;
    private bool mostrarAlerta = false;
    private bool modoEditar = false;

    [Inject] private IRepository Repository { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        votantes = await Repository.GetAsync<List<Votante>>("api/Votantes");
    }

    private void MostrarFormulario()
    {
        votanteActual = new Votante();
        mostrarFormulario = true;
        modoEditar = false;
    }

    private void EditarVotante(Votante votante)
    {
        votanteActual = new Votante
            {
                Cedula = votante.Cedula,
                Nombre = votante.Nombre,
                Ya_voto = votante.Ya_voto
            };
        mostrarFormulario = true;
        modoEditar = true;
    }

    private async Task GuardarVotante()
    {
        var url1 = "api/Votantes";
        var url2 = $"api/Votantes/{votanteActual.Cedula}";

        if (modoEditar)
            await Repository.PutAsync(url2, votanteActual);
        else
            await Repository.PostAsync(url1, votanteActual);

        votantes = await Repository.GetAsync<List<Votante>>(url1);
        mostrarFormulario = false;
        mensajeAlerta = "Votante guardado exitosamente.";
        mostrarAlerta = true;
    }

    private async Task EliminarVotante(int cedula)
    {
        await Repository.DeleteAsync($"api/Votantes/{cedula}");
        votantes = await Repository.GetAsync<List<Votante>>("api/Votantes");
        mensajeAlerta = "Votante eliminado exitosamente.";
        mostrarAlerta = true;
    }

    private void Cancelar()
    {
        mostrarFormulario = false;
    }

    public class Votante
    {
        public int Cedula { get; set; }
        public string Nombre { get; set; } = string.Empty;
        public bool Ya_voto { get; set; }
    }
}
